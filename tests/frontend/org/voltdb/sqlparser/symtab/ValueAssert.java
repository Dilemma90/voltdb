package org.voltdb.sqlparser.symtab;

import org.assertj.core.api.AbstractAssert;
import org.codehaus.groovy.runtime.powerassert.Value;

/**
 * {@link Value} specific assertions - Generated by CustomAssertionGenerator.
 */
public class ValueAssert extends AbstractAssert<ValueAssert, Value> {

    /**
     * Creates a new </code>{@link ValueAssert}</code> to make assertions on actual Value.
     * @param actual the Value we want to make assertions on.
     */
    public ValueAssert(Value actual) {
        super(actual, ValueAssert.class);
    }

    /**
     * An entry point for ValueAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
     * With a static import, one's can write directly : <code>assertThat(myValue)</code> and get specific assertion with code completion.
     * @param actual the Value we want to make assertions on.
     * @return a new </code>{@link ValueAssert}</code>
     */
    public static ValueAssert assertThat(Value actual) {
        return new ValueAssert(actual);
    }

}
